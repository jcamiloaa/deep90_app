# Generated by Django 5.1.8 on 2025-04-24 16:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sports_data', '0007_leaguedata_coverage_fixtures_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveFixtureTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('status', models.CharField(choices=[('idle', 'Inactivo'), ('running', 'En ejecución'), ('failed', 'Fallido'), ('paused', 'Pausado')], default='idle', max_length=20, verbose_name='Estado')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Habilitado')),
                ('interval_seconds', models.PositiveIntegerField(default=60, help_text='Recomendado: 60 segundos para partidos en vivo', verbose_name='Intervalo de actualización (segundos)')),
                ('last_run', models.DateTimeField(blank=True, null=True, verbose_name='Última ejecución')),
                ('next_run', models.DateTimeField(blank=True, null=True, verbose_name='Próxima ejecución')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('celery_task_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID tarea Celery')),
                ('last_error', models.TextField(blank=True, null=True, verbose_name='Último error')),
                ('error_count', models.PositiveIntegerField(default=0, verbose_name='Contador de errores')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_fixture_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Tarea de partidos en vivo',
                'verbose_name_plural': 'Tareas de partidos en vivo',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveOddsTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('status', models.CharField(choices=[('idle', 'Inactivo'), ('running', 'En ejecución'), ('failed', 'Fallido'), ('paused', 'Pausado')], default='idle', max_length=20, verbose_name='Estado')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Habilitado')),
                ('interval_seconds', models.PositiveIntegerField(default=60, help_text='Recomendado: 60 segundos para cuotas en vivo', verbose_name='Intervalo de actualización (segundos)')),
                ('last_run', models.DateTimeField(blank=True, null=True, verbose_name='Última ejecución')),
                ('next_run', models.DateTimeField(blank=True, null=True, verbose_name='Próxima ejecución')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('celery_task_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID tarea Celery')),
                ('last_error', models.TextField(blank=True, null=True, verbose_name='Último error')),
                ('error_count', models.PositiveIntegerField(default=0, verbose_name='Contador de errores')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_odds_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Tarea de cuotas en vivo',
                'verbose_name_plural': 'Tareas de cuotas en vivo',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveFixtureData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixture_id', models.IntegerField(verbose_name='ID del partido')),
                ('date', models.DateTimeField(verbose_name='Fecha del partido')),
                ('timestamp', models.BigIntegerField(verbose_name='Timestamp')),
                ('timezone', models.CharField(max_length=50, verbose_name='Zona horaria')),
                ('status_long', models.CharField(max_length=100, verbose_name='Estado (texto)')),
                ('status_short', models.CharField(max_length=10, verbose_name='Estado (abreviado)')),
                ('elapsed', models.IntegerField(blank=True, null=True, verbose_name='Minutos transcurridos')),
                ('elapsed_seconds', models.IntegerField(blank=True, null=True, verbose_name='Segundos adicionales')),
                ('venue_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estadio')),
                ('venue_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ciudad')),
                ('referee', models.CharField(blank=True, max_length=255, null=True, verbose_name='Árbitro')),
                ('home_team_id', models.IntegerField(verbose_name='ID equipo local')),
                ('home_team_name', models.CharField(max_length=255, verbose_name='Equipo local')),
                ('home_team_logo', models.URLField(blank=True, max_length=255, null=True, verbose_name='Logo equipo local')),
                ('home_team_winner', models.BooleanField(blank=True, null=True, verbose_name='Ganador local')),
                ('away_team_id', models.IntegerField(verbose_name='ID equipo visitante')),
                ('away_team_name', models.CharField(max_length=255, verbose_name='Equipo visitante')),
                ('away_team_logo', models.URLField(blank=True, max_length=255, null=True, verbose_name='Logo equipo visitante')),
                ('away_team_winner', models.BooleanField(blank=True, null=True, verbose_name='Ganador visitante')),
                ('home_goals', models.IntegerField(blank=True, null=True, verbose_name='Goles local')),
                ('away_goals', models.IntegerField(blank=True, null=True, verbose_name='Goles visitante')),
                ('home_halftime', models.IntegerField(blank=True, null=True, verbose_name='Goles local medio tiempo')),
                ('away_halftime', models.IntegerField(blank=True, null=True, verbose_name='Goles visitante medio tiempo')),
                ('home_fulltime', models.IntegerField(blank=True, null=True, verbose_name='Goles local tiempo completo')),
                ('away_fulltime', models.IntegerField(blank=True, null=True, verbose_name='Goles visitante tiempo completo')),
                ('home_extratime', models.IntegerField(blank=True, null=True, verbose_name='Goles local tiempo extra')),
                ('away_extratime', models.IntegerField(blank=True, null=True, verbose_name='Goles visitante tiempo extra')),
                ('home_penalty', models.IntegerField(blank=True, null=True, verbose_name='Penaltis local')),
                ('away_penalty', models.IntegerField(blank=True, null=True, verbose_name='Penaltis visitante')),
                ('league_id', models.IntegerField(verbose_name='ID liga')),
                ('league_name', models.CharField(max_length=255, verbose_name='Liga')),
                ('league_country', models.CharField(max_length=100, verbose_name='País')),
                ('league_logo', models.URLField(blank=True, max_length=255, null=True, verbose_name='Logo liga')),
                ('league_flag', models.URLField(blank=True, max_length=255, null=True, verbose_name='Bandera país')),
                ('league_season', models.IntegerField(verbose_name='Temporada')),
                ('league_round', models.CharField(blank=True, max_length=100, verbose_name='Jornada')),
                ('raw_data', models.JSONField(blank=True, null=True, verbose_name='Datos en bruto')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='sports_data.livefixturetask', verbose_name='Tarea')),
            ],
            options={
                'verbose_name': 'Partido en vivo',
                'verbose_name_plural': 'Partidos en vivo',
                'indexes': [models.Index(fields=['fixture_id'], name='sports_data_fixture_4eddc7_idx'), models.Index(fields=['date'], name='sports_data_date_81d28c_idx'), models.Index(fields=['status_short'], name='sports_data_status__9de016_idx'), models.Index(fields=['league_id'], name='sports_data_league__e1b1b8_idx')],
                'unique_together': {('task', 'fixture_id')},
            },
        ),
        migrations.CreateModel(
            name='LiveOddsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixture_id', models.IntegerField(verbose_name='ID del partido')),
                ('league_id', models.IntegerField(verbose_name='ID liga')),
                ('league_season', models.IntegerField(verbose_name='Temporada')),
                ('home_team_id', models.IntegerField(verbose_name='ID equipo local')),
                ('away_team_id', models.IntegerField(verbose_name='ID equipo visitante')),
                ('home_goals', models.IntegerField(blank=True, null=True, verbose_name='Goles local')),
                ('away_goals', models.IntegerField(blank=True, null=True, verbose_name='Goles visitante')),
                ('status_elapsed', models.IntegerField(blank=True, null=True, verbose_name='Minutos transcurridos')),
                ('status_elapsed_seconds', models.IntegerField(blank=True, null=True, verbose_name='Segundos adicionales')),
                ('status_long', models.CharField(max_length=100, verbose_name='Estado (texto)')),
                ('is_stopped', models.BooleanField(default=False, verbose_name='Detenido')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Bloqueado')),
                ('is_finished', models.BooleanField(default=False, verbose_name='Finalizado')),
                ('update_time', models.CharField(max_length=50, verbose_name='Hora actualización')),
                ('raw_odds_data', models.JSONField(blank=True, null=True, verbose_name='Datos en bruto de cuotas')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odds', to='sports_data.liveoddstask', verbose_name='Tarea')),
            ],
            options={
                'verbose_name': 'Cuota en vivo',
                'verbose_name_plural': 'Cuotas en vivo',
                'indexes': [models.Index(fields=['fixture_id'], name='sports_data_fixture_af0d6f_idx'), models.Index(fields=['league_id'], name='sports_data_league__ba54e7_idx')],
                'unique_together': {('task', 'fixture_id')},
            },
        ),
    ]
